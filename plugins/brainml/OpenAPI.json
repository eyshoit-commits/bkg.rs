{
  "openapi": "3.1.0",
  "info": {
    "title": "brainml",
    "version": "0.1.0",
    "description": "Hybrid retrieval and training API for the brainml plug-in"
  },
  "paths": {
    "/api/v1/brainml/index": {
      "post": {
        "summary": "Index documents",
        "operationId": "brainmlIndex",
        "tags": ["brainml"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/IndexRequest"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Index accepted",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/QueryResponse"}
              }
            }
          }
        }
      }
    },
    "/api/v1/brainml/query": {
      "post": {
        "summary": "Execute hybrid retrieval",
        "operationId": "brainmlQuery",
        "tags": ["brainml"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/QueryRequest"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ranked results",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/QueryResponse"}
              }
            }
          }
        }
      }
    },
    "/api/v1/brainml/train": {
      "post": {
        "summary": "Trigger pipeline training",
        "operationId": "brainmlTrain",
        "tags": ["brainml"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/TrainRequest"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Training updated",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/TrainResponse"}
              }
            }
          }
        }
      }
    },
    "/api/v1/brainml/admin/status": {
      "get": {
        "summary": "Read admin status",
        "operationId": "brainmlStatus",
        "tags": ["brainml"],
        "responses": {
          "200": {
            "description": "Status payload",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/AdminStatus"}
              }
            }
          }
        }
      }
    },
    "/health/live": {
      "get": {
        "summary": "Liveness",
        "operationId": "brainmlLive",
        "tags": ["brainml"],
        "responses": {
          "200": {
            "description": "Liveness details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/HealthResponse"}
              }
            }
          }
        }
      }
    },
    "/health/ready": {
      "get": {
        "summary": "Readiness",
        "operationId": "brainmlReady",
        "tags": ["brainml"],
        "responses": {
          "200": {
            "description": "Readiness details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/HealthResponse"}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DocumentInput": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "text": {"type": "string"},
          "metadata": {"type": "object"}
        }
      },
      "QueryFilter": {
        "type": "object",
        "properties": {
          "field": {"type": "string"},
          "value": {},
          "operator": {"type": "string"}
        }
      },
      "IndexRequest": {
        "type": "object",
        "required": ["collection", "documents"],
        "properties": {
          "collection": {"type": "string"},
          "documents": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/DocumentInput"}
          },
          "embed": {"type": "boolean"},
          "fts": {"type": "boolean"}
        }
      },
      "QueryRequest": {
        "type": "object",
        "required": ["collection"],
        "properties": {
          "collection": {"type": "string"},
          "query": {"type": "string"},
          "vector": {
            "type": "array",
            "items": {"type": "number"}
          },
          "topK": {"type": "integer"},
          "hybrid": {"type": "boolean"},
          "filters": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/QueryFilter"}
          }
        }
      },
      "DocumentRecord": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "text": {"type": "string"},
          "metadata": {"type": "object"},
          "embedding": {
            "type": "array",
            "items": {"type": "number"}
          }
        }
      },
      "QueryResult": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "score": {"type": "number"},
          "rank": {"type": "integer"},
          "document": {"$ref": "#/components/schemas/DocumentRecord"}
        }
      },
      "QueryResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/QueryResult"}
          },
          "latency_ms": {"type": "integer"}
        }
      },
      "TrainRequest": {
        "type": "object",
        "required": ["pipeline", "params"],
        "properties": {
          "pipeline": {"type": "string"},
          "params": {"type": "object"}
        }
      },
      "TrainResponse": {
        "type": "object",
        "properties": {
          "pipeline": {"type": "string"},
          "status": {"type": "string"},
          "updated_at": {"type": "string", "format": "date-time"}
        }
      },
      "AdminStatus": {
        "type": "object",
        "properties": {
          "version": {"type": "string"},
          "uptime_seconds": {"type": "integer"},
          "capabilities": {
            "type": "array",
            "items": {"type": "string"}
          }
        }
      },
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string"},
          "details": {"type": "object"}
        }
      }
    }
  },
  "tags": [
    {"name": "brainml", "description": "BrainML plug-in API"}
  ]
}
